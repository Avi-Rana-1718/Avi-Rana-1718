{
    "title":"Hello GameDev!",
    "timestamp": 1709215805437,
    "content": "In this blog post, I would like to document everything that I learned while making <a href='https://github.com/Avi-Rana-1718/bad-flappybird' class='hover:underline text-[#5151c4]'>bad-flappybird</a>. Though I might not have applied all the concepts perfect but I still learned a lot. I'll explain different concepts of C++, SFML & gamedev in general that  I learned, one-by-one. <br/><br/> <h3 id='fps'><a href='#fps'>Frames per seconds/FPS</a></h3> <p> FPS or frames per seconds is decided by how much time it takes for the computer to compute & render everything for the frame. If it takes 0.1 seconds on average, then your game will have 10fps. <br/><br/> Another important concept related the fps is delta time which helps with keeping the game speed and other things consistent when fps changes/drops. I haven't study this yet. </p> <br/> <h3 id='ecs'><a href='#ecs'>ECS/Entity-Components-Systems</a></h3> <p> ECS is a <u>software architectural pattern</u> used in most video games. In ECS, we separate the entities, components & systems. What are these, you may ask? <br/><br/> Entities are anything can be a seen, interacted or any object that can respond to player input or other entities. <br /><br/> Components are collection of specific type of data about entities. For example: CTransform, this component stores information about an entity's X & Y position and it's X & Y speed. <br /><br/> Systems on the other hand act on the information stored within said components and manipulate them.</p> <br/> <h3 id='hfiles'><a href='#hfiles'>Header files</a></h3> <p> We can make the so called header files in C & C++. In C, they are named '.h' & in C++, they are named '.hpp'.  They are used to split the code in modules and separate the code in different file which helps in retaining sanity when the codebase becomes too large. </p> <br/> <h3 id='hpre'><a href='#hpre'>Preprocessor directive</a></h3> <p>#pragma once</p> <br/> <h3 id='hpre'><a href='#hpre'>Delta time</a></h3> <p>Delta time refers to the elapsed time between to consecutive frames in game or application, It is used to ensure smooth and consistent movement and animation, regardless of the current framerate ./p>"
} 